package AssignmentOne;

import java.net.MalformedURLException;
import java.net.URL;
import java.time.Duration;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.touch.TouchActions;
import org.openqa.selenium.remote.DesiredCapabilities;

import io.appium.java_client.MobileDriver;
import io.appium.java_client.MobileElement;
import io.appium.java_client.MultiTouchAction;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidTouchAction;
import io.appium.java_client.touch.LongPressOptions;
import io.appium.java_client.touch.TapOptions;
import io.appium.java_client.touch.WaitOptions;
import io.appium.java_client.touch.offset.ElementOption;
import io.appium.java_client.touch.offset.PointOption;

public class MultiTouch {

	
	public static AndroidDriver<MobileElement> driver;
	
	public static void main(String[] args) throws MalformedURLException {


		DesiredCapabilities capabilities = new DesiredCapabilities ();
		
		capabilities.setCapability("automationName","UiAutomator1");
		capabilities.setCapability("deviceName","Pixel 3 XL API 24");
		capabilities.setCapability("platformVersion", "7");
		capabilities.setCapability("platformName", "Android");
		capabilities.setCapability("appPackage", "com.the511plus.MultiTouchTester");
		capabilities.setCapability("appActivity",".MultiTouchTester");
		
		driver = new AndroidDriver<MobileElement>(new URL("http://127.0.0.1:4723/wd/hub"), capabilities);
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		
		//AndroidTouchAction touch = new AndroidTouchAction (driver);
		
		MultiTouchAction maction = new MultiTouchAction (driver);
		
		WebElement ele = driver.findElement((By.id("com.the511plus.MultiTouchTester:id/imageview")));
		AndroidTouchAction touch = new AndroidTouchAction (driver);
		//touch.longPress(LongPressOptions.longPressOptions().withElement(ElementOption.element(ele))).waitAction(WaitOptions.waitOptions(Duration.ofMillis(500))).release().perform();
		touch.tap(ele).release();
		maction.add(touch).add(touch).add(touch).add(touch).add(touch).perform();
		
		
		/*
		 * //X Y Coordinates 1 //int x1 = (220); int y1 = (289); //X Y Coordinates 2 int
		 * x2 = (1135); int y2 = (281); //X Y Coordinates 3 int x3 = (732); int y3 =
		 * (1346); //X Y Coordinates 4 int x4 = (240); int y4 = (2343); //X Y
		 * Coordinates 5 int x5 = (1078); int y5 = (2339);
		 * 
		 * 
		 * AndroidTouchAction action1 = new AndroidTouchAction( driver).longPress(x1,
		 * y1).waitAction(1500); TouchAction action2 = new TouchAction((AndroidDriver)
		 * driver).longPress(x2, y2).waitAction(1500); TouchAction action3 = new
		 * TouchAction((AndroidDriver) driver).longPress(x3, y3).waitAction(1500);
		 * TouchAction action4 = new TouchAction((AndroidDriver) driver).longPress(x4,
		 * y4).waitAction(1500); TouchAction action5 = new TouchAction((AndroidDriver)
		 * driver).longPress(x5, y5).waitAction(1500);
		 * 
		 * 
		 * //maction.add(action1).add(action2).add(action3).add(action4).add(action5).
		 * perform();
		 * 
		 * //MultiTouchAction action1 = new MultiTouchAction((AndroidDriver)
		 * driver).longPress(LongPressOptions.longPressOptions().withPoint(PointOption.
		 * point(x1, y1))).waitAction(1500);
		 * //maction.press(action1).press(action2).press(action3).press(action4).press(
		 * action5).release().perform();
		 * //touch.longPress(LongPressOptions.longPressOptions().withElement(
		 * ElementOption.element(eleOne))).waitAction(WaitOptions.waitOptions(Duration.
		 * ofMillis(2000)));
		 * //touch.longPress(LongPressOptions.longPressOptions().withElement(
		 * ElementOption.element(eleTwo))).waitAction(WaitOptions.waitOptions(Duration.
		 * ofMillis(1500)));
		 * //touch.longPress(LongPressOptions.longPressOptions().withElement(
		 * ElementOption.element(eleThree))).waitAction(WaitOptions.waitOptions(Duration
		 * .ofMillis(1400)));
		 * //touch.longPress(LongPressOptions.longPressOptions().withElement(
		 * ElementOption.element(eleFour))).waitAction(WaitOptions.waitOptions(Duration.
		 * ofMillis(1300)));
		 */
	}

	
}
